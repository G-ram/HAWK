Introduction
HAWK is a programming language designed for web-scraping. The language
takes its inspiration from AWK, using the same (pattern, action) model
to manipulate HTML as opposed to text documents. The HAWK compiler compiles
code to Java code, which is compiled to Java Bytecode, and then run on a
Java Virtual Machine 

-------------------------------------------------------------------------
Declarations give a specific meaning to each identifier.

	declaration:
		declarator-list

	declarator-list:
		declarator
		declarator, declarator-list

	declarator:
		identifier
		identifier = expression
		identifier(arg-list) = statement

For identifier = expression, the type of identifier is the result of the
expression on the RHS. If an identifier is later used in an expression,
it yields a type that is the same as when it was created. You must initialize
a variable when you create it. Declarators of just "identifier" can only occur 
as variables in a function's argument list

Table Declarators:

When declaring a table, you can use the special form: 	
	identifier = [| x1, x2, ..., xn |]
	
	which is equivalent to:
		
	identifier = [| 0:x1, 1:x2, ..., (xn-1):xn |]

Functions Declarators:

	identifier(arg1, arg2, ..., argn) = statement

The type of identifier(arg1, arg2, ..., argn) is the type of the final
expression in block. The types of arg1, arg2, ..., argn are inferred within
the statement. 

All arguments to a function are call-by-value. When tables are passed as 
arguments, the reference to the table is passed by value. 

'open' is a special reserved function that takes a file name as a string. 

---------------------------------------------------------------------------

Statements are executed in sequence.

	Statement:
		expression statement
		assignment statement
		compound-statement
		conditional statement
		while statement
		pattern statement

Expression Statements

	Expression statement:
		expression;	

Expression statement will typically be a function call

/* Separate assignment statement from expression statement
   Do we want "x = 3" to evaluate to 3? */

Assignment Statement

	Assignment statement:
		identifier = expression

Assignment statement can be a declaration or it can be
updating the value of a variable. 

Compound Statements
Used so several expressions can be used where one is expected

	Compound-Statement:
		statement-list

	statement-list:
		statement
		statement, statement-list

Conditional Statement

	Conditional Statement:
		if (expression) statement else statement

The first substatement is executed if expression is true, 
else the second substatement is executed. The expression
that is evaluated must be of type boolean. 

while Statement

	while statement:
		while (expression) statement

The substatement is executed while the expression evaluates to true. 
The expression must be of type boolean. 

Pattern Statement

	pattern statement:
		pattern statement

Pattern is a pattern to match against and substatement is executed each 
time that the patern is matched. 
	